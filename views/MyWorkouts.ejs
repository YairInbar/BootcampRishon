<!DOCTYPE html>
<html lang="he" dir="rtl">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>רשימת אימונים</title>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/axios/1.3.4/axios.min.js"></script>
    <script src="https://cdn.tailwindcss.com"></script>
    <style>
        @import url('https://fonts.googleapis.com/css2?family=Heebo:wght@400;700&display=swap');
        body {
            font-family: 'Heebo', sans-serif;
        }
    </style>
</head>
<body class="bg-gray-100">
    <div id="app" class="flex flex-col h-screen">
        <header class="bg-orange-500 p-4 text-right shadow-md">
            <h1> המסלולים שלי</h1>
        </header>
        
        <main class="flex-1 overflow-y-auto p-4 space-y-4">
            <div class="bg-white rounded-lg p-6 shadow-lg">
                <div class="relative w-full h-64 mb-6 overflow-hidden rounded-lg">
                    <img src="C:\Users\Lenovo\Documents\GitHub\BootcampRishon\public\images\fit1.png" alt="תמונת אימון" class="absolute inset-0 w-full h-full object-cover">
                    <div class="absolute inset-0 bg-gradient-to-t from-black to-transparent"></div>
                    <p class="absolute bottom-4 left-4 text-white text-xl font-bold">אימון אחרון: ריצה בפארק</p>
                </div>
                <h2 class="text-2xl font-bold mb-4 text-orange-600">האימונים שלי</h2>
                <div id="workoutList" class="space-y-4 mb-4"></div>
                <button id="btnCreateNew" class="w-full bg-orange-500 text-white text-center py-3 rounded-lg hover:bg-orange-600 transition duration-300 ease-in-out text-lg font-bold">
                    יצירת חדש
                </button>
            </div>
        </main>
        <footer class="bg-white p-4 shadow-md">
            <div class="flex justify-around">
                <button id="btnProfile" class="flex flex-col items-center text-gray-600 hover:text-orange-500 transition duration-300 ease-in-out">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-8 w-8" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z" />
                    </svg>
                    <span class="mt-1 text-sm">פרופיל</span>
                </button>
                <button id="btnSearch" class="flex flex-col items-center text-gray-600 hover:text-orange-500 transition duration-300 ease-in-out">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-8 w-8" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" />
                    </svg>
                    <span class="mt-1 text-sm">חיפוש</span>
                </button>
                <button id="btnMap" class="flex flex-col items-center text-gray-600 hover:text-orange-500 transition duration-300 ease-in-out">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-8 w-8" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z" />
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 11a3 3 0 11-6 0 3 3 0 016 0z" />
                    </svg>
                    <span class="mt-1 text-sm">מפה</span>
                </button>
            </div>
        </footer>
    </div>

    <script>
        const apiBaseUrl = 'http://localhost:8080/api/v1/SavedRoutes'; 
        let token = '2A2mjhGjVHsFpC9yEl7uPYiiXMGs98Zob7vtUmDlVUE'; 

        axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;
        
        async function fetchSavedRoutes() {
            try {
                const response = await axios.get(apiBaseUrl);
                return response.data;
            } catch (error) {
                console.error('Error fetching saved routes:', error);
                alert('שגיאה בטעינת המסלולים השמורים');
                return [];
            }
        }

        async function addSavedRoute(routeId) {
            try {
                const response = await axios.post(`${apiBaseUrl}/${routeId}`);
                alert('המסלול נוסף בהצלחה');
                return response.data;
            } catch (error) {
                console.error('Error adding saved route:', error);
                alert('שגיאה בהוספת המסלול');
                return null;
            }
        }

        async function removeSavedRoute(routeId) {
            try {
                const response = await axios.delete(`${apiBaseUrl}/${routeId}`);
                alert('המסלול הוסר בהצלחה');
                return response.data;
            } catch (error) {
                console.error('Error removing saved route:', error);
                alert('שגיאה בהסרת המסלול');
                return null;
            }
        }

        function renderWorkoutList(workouts) {
            const workoutListElement = document.getElementById('workoutList');
            workoutListElement.innerHTML = workouts.map(workout => `
                <div class="bg-gray-50 rounded-lg p-4 hover:shadow-md transition duration-300 ease-in-out">
                    <div class="flex justify-between items-center">
                        <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 text-orange-500" viewBox="0 0 20 20" fill="currentColor">
                            <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z" />
                        </svg>
                        <div class="text-right">
                            <p class="font-bold text-lg">${workout.name || 'שם לא זמין'}</p>
                            <p class="text-gray-600">${workout.duration || 'משך לא זמין'} | ${workout.distance || 'מרחק לא זמין'}</p>
                        </div>
                        <div>
                            <button onclick="toggleWorkoutDetails('${workout._id}')" class="focus:outline-none text-orange-500 hover:text-orange-600 mr-2">
                                <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" viewBox="0 0 20 20" fill="currentColor">
                                    <path fill-rule="evenodd" d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z" clip-rule="evenodd" />
                                </svg>
                            </button>
                            <button onclick="removeWorkout('${workout._id}')" class="focus:outline-none text-red-500 hover:text-red-600">
                                <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16" />
                                </svg>
                            </button>
                        </div>
                    </div>
                </div>
            `).join('');
        }

        function removeWorkout(workoutId) {
            if (confirm('האם אתה בטוח שברצונך להסיר אימון זה?')) {
                // Here you would typically call an API to remove the workout
                // For this example, we'll just remove it from the local array
                workouts = workouts.filter(workout => workout._id !== workoutId);
                renderWorkoutList(workouts);
                alert('האימון הוסר בהצלחה');
            }
        }

        async function toggleWorkoutDetails(workoutId) {
            const isAlreadySaved = await isSavedRoute(workoutId);
            if (isAlreadySaved) {
                if (confirm('האם אתה רוצה להסיר את המסלול הזה?')) {
                    await removeSavedRoute(workoutId);
                    await refreshWorkouts();
                }
            } else {
                if (confirm('האם אתה רוצה להוסיף את המסלול הזה?')) {
                    await addSavedRoute(workoutId);
                    await refreshWorkouts();
                }
            }
        }

        async function isSavedRoute(workoutId) {
            const savedRoutes = await fetchSavedRoutes();
            return savedRoutes.some(route => route._id === workoutId);
        }

        async function refreshWorkouts() {
            const savedRoutes = await fetchSavedRoutes();
            renderWorkoutList(savedRoutes);
        }

        function setupEventListeners() {
            document.getElementById('btnGanHaashirich').addEventListener('click', () => {
                alert('נבחר אימון ריצה ');
            });

            document.getElementById('btnGanVarvzavruch').addEventListener('click', () => {
                alert('נבחר אימון יוגה');
            });

            document.getElementById('btnCreateNew').addEventListener('click', () => {
                alert('התחלת יצירת אימון חדש');
            });

            document.getElementById('btnProfile').addEventListener('click', () => {
                alert('עבר לדף הפרופיל');
            });

            document.getElementById('btnSearch').addEventListener('click', () => {
                alert('פתח חיפוש');
            });

            document.getElementById('btnMap').addEventListener('click', () => {
                alert('פתח מפה');
            });
        }

        let workouts = []; // This will store our workouts

async function init() {
    workouts = [
        { _id: '1', name: 'ריצה בפארק', duration: '30 דקות', distance: '5 ק"מ' },
        { _id: '2', name: 'אימון כוח', duration: '45 דקות', distance: 'לא רלוונטי' },
        { _id: '3', name: 'שחייה', duration: '1 שעה', distance: '2 ק"מ' }
    ];
    renderWorkoutList(workouts);
    setupEventListeners();
}

init();
</script>
</body>
</html>